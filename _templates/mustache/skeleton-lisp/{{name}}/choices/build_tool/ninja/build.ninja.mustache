PREFIX = $${PREFIX:-/usr/local}

DEBUG = $${DEBUG:-0}

# Single package build.ninja script.
ninja_required_version = 1.5

#rootdir = .
builddir = build

PKG_CONFIG = pkg-config --with-path=${PREFIX}/lib/pkgconfig

# LISP=[sbcl | clisp]
LISP = $${LISP:-sbcl}

pkg = {{project}}{{^project}}util{{/project}}
parent = {{parent}}{{^parent}}introlisp{{/parent}}
proj = ${parent}.${pkg}
namespace_path = $$(echo ${parent} | sed 'y|.|/|')
version = {{version}}{{^version}}0.1.0{{/version}}

# Rule for running custom commands.
rule custom_cmd
  description = $DESC
  command = $COMMAND

include ./build-targets.ninja
#include ./build-auxffi.ninja

build build/.depend: custom_cmd
  DESC = Set up buildir & generate .depend file
  COMMAND = $
    mkdir -p $${HOME}/quicklisp/local-projects/${parent} ; $
    $$(find src tests -type d -exec mkdir -p build/{} \;) ; $
    cp -fR resources build ; $
    echo '' > build/.depend

build build/ts_main: custom_cmd || tests/test-suite.lisp
  DESC = Compile test
# #$${HOME}/bin/buildapp_${LISP} --load tests/test-suite.lisp --entry ${proj}/test:main --output build/ts_main
# #rlwrap ${LISP} [--load | -i] tests/test-suite.lisp [--eval | -x] '(${proj}/test:save-image)'
  COMMAND = $
    rm build/ts_main ; $
    if [ "clisp" = ${LISP} ] ; then $
      rlwrap ${LISP} -i tests/test-suite.lisp -x '(asdf:make :${proj}/test-image)' ; $
    else $
      rlwrap ${LISP} --load tests/test-suite.lisp --eval '(asdf:make :${proj}/test-image)' ; $
    fi
{{#executable}}

build build/main: custom_cmd || src/main.lisp
  DESC = Compile main
# #$${HOME}/bin/buildapp_${LISP} --load src/main.lisp --entry ${proj}:main --output build/main
# #rlwrap ${LISP} [--load | -i] src/main.lisp [--eval | -x] '(${proj}:save-image)'
  COMMAND = $
    rm build/main ; $
    if [ "clisp" = ${LISP} ] ; then $
      rlwrap ${LISP} -i src/main.lisp -x '(asdf:make :${proj}/run-image)' ; $
    else $
      rlwrap ${LISP} --load src/main.lisp --eval '(asdf:make :${proj}/run-image)' ; $
    fi

build run: custom_cmd || build/main
  DESC = Run main app [ARGS=$${ARGS:-}]
  COMMAND = build/main $${ARGS:-}
  pool = console
  restat = 1

build repl_run: custom_cmd || src/main.lisp
  DESC = In repl, run main app [ARGS=$${ARGS:-}]
# #rlwrap ${LISP} [--load | -i] src/main.lisp [--eval | -x] '(progn (asdf:load-system :${proj}) (${proj}:run-main))' $${ARGS:-}
  COMMAND = $
    if [ "clisp" = ${LISP} ] ; then $
      rlwrap ${LISP} -i src/main.lisp -x '(asdf:test-system :${proj}/run)' $${ARGS:-} ; $
    else $
      rlwrap ${LISP} --load src/main.lisp --eval '(asdf:test-system :${proj}/run)' $${ARGS:-} ; $
    fi
  pool = console
  restat = 1
{{/executable}}

build all: phony build/.depend{{#executable}} build/main{{/executable}}
build testcompile: phony build/ts_main

default help
